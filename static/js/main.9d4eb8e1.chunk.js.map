{"version":3,"sources":["components/Navbar/NavbarElements.js","components/Navbar/index.js","components/LoggedInNavbar/LoggedInNavElements.js","components/LoggedInNavbar/index.js","components/HomeChart.js","components/UserMenuButton.js","Pages/index.js","Pages/Signup.js","Pages/Login.js","Pages/FileUpload.js","Pages/configComp.js","Pages/DisplayResult.js","Pages/FileUploadTrial.js","Pages/configCompTrial.js","Pages/UserMenu.js","Pages/DataSelected.js","Pages/AboutPage.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","styled","nav","NavLink","Link","Bars","FaBars","NavMenu","div","NavBtn","NavBtnLink","Navbar","style","color","to","activeStyle","NavbarLoggedIn","props","onClick","logOut","HomeChart","state","data","labels","datasets","label","fill","borderColor","this","Component","buttonStyle","position","left","width","height","backgroundColor","borderRadius","GlobalStyle","createGlobalStyle","chartStyle","top","headerStyle","Home","signInStyle","Signup","myChangeHandlerUsername","event","setState","username","target","value","myChangeHandlerPassword","password","SignedUp","handleSubmit","bind","preventDefault","formData","FormData","append","sendreq","jsonSignUp","axios","post","response","onSubmit","className","type","onChange","placeholder","href","logInStyle","Login","myChangeHandlerUserName","displayWrongPassword","wrongLogin","LoggedIn","first","token","loginForm","console","log","toggleLoggedIn","setToken","setUserName","history","push","jsonLogin","isLoggedIn","formStyle","FileUpload","useForm","register","fData","csv","ref","name","margin","override","css","configFormStyle","loadTextStyle","loadTextStyle2","downloadButtonStyle","initialState","input_name","output_name","time_format_type","horizon","backtest","eval_metric","display_metric","use_gpu","threads","algorithm","save_data","configComp","updateOnRes","res","csvData","delete","clickDownload","download","myChangeHandlerSaveData","myChangeHandlerAlgorithm","myChangeHandlerInputName","myChangeHandlerOutputName","myChangeHandlerTimeFormat","myChangeHandlerHorizon","myChangeHandlerBacktest","myChangeHandlerEvaluation","myChangeHandlerDisplay","myChangeHandlerGPU","myChangeHandlerThreads","submitted","object","forecast","parseInt","evaluation_metric","hardware","yamlObject","YAML","Document","contents","headers","then","catch","err","warn","loading","size","Button","variant","DisplayResult","yes","test","res_result","form","button","input","textarea","fieldset","FileUploadTrial","f","ConfigCompTrial","split","HoverText","welcomeStyle","getDataStyle","SelectHeaderStyle","UserMenu","handleTableData","rowsArray","counter","i","id","dataName","dataID","rows","goToUpload","dataSelected","selectedOne","setSelected","makeDataButtons","displayData","inp","leftComp","asArray","toString","dataArray","getDataClicked","listDatasets","get","selectOperation","selection","selected","rowIds","handleSelectDataClick","frontendDeleteRow","update","splice","length","deleteDataRow","showButton","leftVar","leftTrack","darkTheme","createMuiTheme","palette","ThemeProvider","theme","columns","field","headerName","description","pageSize","disableMultipleSelection","onSelectionChange","newSelection","map","DataSelected","useState","updateSubmitted","responseGot","updateGot","data_id","afterResponse","HeaderStyle","posList","InputStyle","InputText","right","AboutPage","class","direction","Table","striped","bordered","hover","App","csvFile","Response_Result","trial_input","selectedSavedData","selectedFData","toggleLoggedFalse","theToken","basename","path","exact","component","render","LoggedInNavbar","withRouter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9d4eb8e1.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport {NavLink as Link} from 'react-router-dom'\nimport {FaBars} from 'react-icons/fa'\n\nexport const Nav = styled.nav`\n    background: #1B1B1B;\n    height: 80px;\n    display: flex;\n    justify-content: space-between;\n    padding: 0.5rem calc((100vw - 1000px)/2);\n    z-index: 100000;\n`;\n\nexport const NavLink = styled(Link)`\n    color: #fff;\n    display: flex;\n    align-items: center;\n    text-decoration: none;\n    padding: 25px;\n    height: 100%;\n    cursor: pointer;\n\n    &.active {\n        color: #26688E;\n    }\n`;\n\nexport const Bars=styled(FaBars)`\n    display: none;\n    color: #fff;\n\n    @media scrren and (max-width: 768 px){\n        display: block;\n        position: absolute;\n        top: 0;\n        right: 0;\n        transform: translate(-100%, 75%);\n        font-size: 1.8rem;\n        cursor: pointer;\n    }\n`;\n\nexport const NavMenu=styled.div`\n    display: flex;\n    align-items: center;\n    margin-right: 25px;\n\n    @media screen and (max-widths: 768px){\n        display: none;\n    }\n`;\n\nexport const NavBtn=styled.nav`\n    display:flex;\n    align-items: center;\n    margin-right: 24px;\n\n    @media screen and (max-width: 768px){\n        display: none;\n    }\n`;\n\nexport const NavBtnLink = styled(Link)`\n    border-radius: 4px;\n    background: #26688E;\n    padding: 10px 22px;\n    color: #fff;\n    border: none;\n    outline: none;\n    cursor: pointer;\n    transition: all 0.2s ease-in-out;\n    text-decoration: none;\n\n    &:hover {\n        transition: all 0.2s ease-in-out;\n        background: #857F96;\n        color: #010606\n    }\n`;\n\n","import React from 'react'\nimport {Nav, NavLink, Bars, NavMenu, NavBtn, NavBtnLink} from './NavbarElements';\n\n\nconst Navbar = () => {\n    return (\n        <>\n            <Nav>\n                <NavLink style={{color: \"#26688E\"}} to=\"/\">\n                    <h1>Forecast A(P)I</h1>\n                </NavLink>\n                <Bars/>\n                <NavMenu>\n                    <NavLink to=\"/Signup\" activeStyle>\n                        Sign Up\n                    </NavLink>\n                    <NavLink to=\"/About\" activeStyle>\n                        About\n                    </NavLink>\n                    <NavLink to='/trial' activeStyle>\n                        Try it out!\n                    </NavLink>\n                </NavMenu>\n                <NavBtn>\n                    <NavBtnLink to=\"/Login\">\n                        Log In\n                    </NavBtnLink>\n                </NavBtn>\n            </Nav>\n        </>\n    )\n}\n\nexport default Navbar;\n","import styled from 'styled-components'\nimport {NavLink as Link} from 'react-router-dom'\nimport {FaBars} from 'react-icons/fa'\n\nexport const Nav = styled.nav`\n    background: #1B1B1B;\n    height: 80px;\n    display: flex;\n    justify-content: space-between;\n    padding: 0.5rem calc((100vw - 1000px)/2);\n    z-index: 100000;\n`;\n\nexport const NavLink = styled(Link)`\n    color: #fff;\n    display: flex;\n    align-items: center;\n    text-decoration: none;\n    padding: 25px;\n    height: 100%;\n    cursor: pointer;\n\n    &.active {\n        color: #15cdfc;\n    }\n`;\n\nexport const Bars=styled(FaBars)`\n    display: none;\n    color: #fff;\n\n    @media scrren and (max-width: 768 px){\n        display: block;\n        position: absolute;\n        top: 0;\n        right: 0;\n        transform: translate(-100%, 75%);\n        font-size: 1.8rem;\n        cursor: pointer;\n    }\n`;\n\nexport const NavMenu=styled.div`\n    display: flex;\n    align-items: center;\n    margin-right: 150px;\n\n    @media screen and (max-widths: 768px){\n        display: none;\n    }\n`;\n\nexport const NavBtn=styled.nav`\n    display:flex;\n    align-items: center;\n    margin-right: 24px;\n\n    @media screen and (max-width: 768px){\n        display: none;\n    }\n`;\n\nexport const NavBtnLink = styled(Link)`\n    border-radius: 4px;\n    background: #26688E;\n    padding: 10px 22px;\n    color: #fff;\n    border: none;\n    outline: none;\n    cursor: pointer;\n    transition: all 0.2s ease-in-out;\n    text-decoration: none;\n\n    &:hover {\n        transition: all 0.2s ease-in-out;\n        background: #fff;\n        color: #010606\n    }\n`;\n\n","import React from 'react'\nimport {Nav, NavLink, Bars, NavMenu, NavBtn, NavBtnLink} from './LoggedInNavElements';\n\n\nconst NavbarLoggedIn = (props) => {\n    return (\n        <>\n            <Nav>\n                <NavLink style={{color: \"#26688E\"}} to=\"/userMenu\">\n                    <h1>Forecast A(P)I</h1>\n                </NavLink>\n                <Bars/>\n                <NavBtn onClick={props.logOut}>\n                    <NavBtnLink to=\"/\">\n                        Log Out\n                    </NavBtnLink>\n                </NavBtn>\n            </Nav>\n        </>\n    )\n}\n\nexport default NavbarLoggedIn;\n","import React, { Component } from 'react';\nimport { Line } from 'react-chartjs-2';\n\n\nexport default class HomeChart extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            data: {\n                labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\"],\n                datasets: [\n                    {\n                        label: \"Your Data\",\n                        data: [33, 46, 80, 60, 72, 90],\n                        fill: false,\n                        borderColor: \"rgba(75,192,192,1)\"\n                    },\n                    {\n                        label: \"Forecast\",\n                        data: [, , , , , 90 , 110, 120, 105],\n                        fill: false,\n                        borderColor: \"#fff\"\n                    }\n                ]\n            }\n        };\n    }\n\n    render () {\n        return (\n            <div>\n            <Line data={this.state.data} />\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport { createMuiTheme, withStyles, makeStyles, ThemeProvider } from '@material-ui/core/styles';\n\n\nconst buttonStyle = {\n    position: 'absolute',\n    left: '50px',\n    width: '110px',\n    height: '110px',\n    backgroundColor: '#4D4A97',\n    color: '#fff',\n    borderRadius: '10px',\n\n};\n\nexport default class UserMenuButton extends Component {\n    render() {\n        return (\n            <ButtonBase className=\"menubutton\"style={buttonStyle} >Hello</ButtonBase>\n        );\n    }\n}","import React from 'react'\nimport styled, {createGlobalStyle, css} from 'styled-components';\nimport HomeChart from '../components/HomeChart';\nimport { Fade} from \"react-awesome-reveal\";\nimport UserMenuButton  from '../components/UserMenuButton'\n\nconst GlobalStyle=createGlobalStyle`\n    html {\n        height: 100px;\n    }\n\n    body {\n        font-family: Arial, Helvetica, sans-serif;\n        background: #1B1B1B;\n        height: 100%;\n        margin: 0;\n        color: #555;\n    }\n`;\n\n\nconst chartStyle = {\n    width: '500px',\n    position: 'relative',\n    //top: '120px',\n    //left: '25px'\n    top: '100px',\n    left: '400px'\n};\n\n\n\n\nconst headerStyle = {\n    position: 'absolute',\n    left: '230px',\n    top: '95px',\n    color: '#36D7B7'\n};\n\n//<div style={{width: \"100%\", height: \"0\", paddingNottom: \"100%\", position: \"relative\"}}><iframe src=\"https://giphy.com/embed/8gNQZ9IpkcdiAjfOgN\" width=\"100%\" height=\"100%\" style={{position:\"absolute\"}} frameBorder=\"0\" class=\"giphy-embed\" allowFullScreen></iframe></div><p><a href=\"https://giphy.com/gifs/illustration-marketing-data-8gNQZ9IpkcdiAjfOgN\">via GIPHY</a></p>\n\nconst Home = (props) => {\n    return (\n        <div>\n            <GlobalStyle/>\n            <Fade style={headerStyle}>\n                <h1>Forecasts at the click of a button</h1>\n            </Fade>\n            <div style={chartStyle}>\n                <HomeChart/>\n            </div>\n        </div>\n    )\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport './Signup.css' ;\nimport axios from 'axios';\nimport styled, {createGlobalStyle, css} from 'styled-components';\n\nconst signInStyle = {\n    position: 'relative',\n    top: '65px'\n}\n\n//#3A3A3C\n//#242424\nconst GlobalStyle=createGlobalStyle`\n    html {\n        height: 100px;\n    }\n\n    body {\n        font-family: Arial, Helvetica, sans-serif;\n        background: #1B1B1B;\n        height: 100%;\n        margin: 0;\n        color: #555;\n    }\n`;\n\nexport default class Signup extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            username: '',\n            password: '',\n            SignedUp: false\n        }\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    myChangeHandlerUsername = (event) => {\n        this.setState({username: event.target.value});\n    }\n\n    myChangeHandlerPassword = (event) => {\n        this.setState({password: event.target.value});\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault()\n        const formData = new FormData()\n        formData.append(\"username\", this.state.username);\n        formData.append(\"password\", this.state.password);\n        const jsonSignUp = {\n            \"username\": this.state.username,\n            \"password\": this.state.password,\n        };\n        const signed = await this.sendreq(formData)\n        if (signed === 'success'){\n            this.setState((state) => {\n                return {SignedUp: true};\n            });\n        }\n        else{\n            this.setState((state) => {\n                return {SignedUp: false};\n            });\n        }\n    }\n\n    async sendreq(jsonSignUp){\n        const {data: response} = await axios.post('https://forecast-6j2gkews6a-uw.a.run.app/newUser', jsonSignUp)\n        return response;\n    }\n\n\n    render(){\n        if (this.state.SignedUp === false){\n            return (\n                <div>\n                <GlobalStyle/>\n                <form style = {signInStyle} onSubmit = {this.handleSubmit} className='form'>\n                        <h3 style={{color: \"#26688E\"}}>Sign Up</h3>\n\n                        <div className=\"form-group\">\n                            <label style={{color: \"#26688E\"}}>Username</label>\n                            <input style={{backgroundColor: \"#1B1B1B\", borderColor:\"#1B1B1B\", color: '#fff'}} type=\"text\" className=\"form-control\" onChange = {this.myChangeHandlerUsername} placeholder=\"Username\" />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label style={{color: \"#26688E\"}}>Password</label>\n                            <input style={{backgroundColor: \"#1B1B1B\", borderColor:\"#1B1B1B\", color: '#fff'}} type=\"password\" className=\"form-control\" onChange = {this.myChangeHandlerPassword} placeholder=\"Enter password\" />\n                        </div>\n\n                        <button type=\"submit\" className=\"btn btn-primary btn-block\" style={{backgroundColor: \"#26688E\", borderColor: \"#26688E\"}}>Sign Up</button>\n                        <p className=\"forgot-password text-right\">\n                            Already registered? <a style={{color: \"#26688E\"}} href=\"/Login\">Log In</a>\n                        </p>\n                    </form>\n                    </div>\n            );\n            }\n            else{\n                return (\n                <div>\n                    <GlobalStyle/>\n                    <h1 style={{color: \"#36D7B7\"}}>Welcome, {this.state.username}</h1>\n                    <a style={{color: \"#26688E\"}} href=\"/Login\">Click here to Log In!</a>\n                </div>\n                );\n            }\n        }\n}","import React, {Component} from 'react' ;\nimport axios from 'axios';\nimport './Login.css'\nimport styled, {createGlobalStyle, css} from 'styled-components';\n\nconst GlobalStyle=createGlobalStyle`\n    html {\n        height: 100px;\n    }\n\n    body {\n        font-family: Arial, Helvetica, sans-serif;\n        background: #1B1B1B;\n        height: 100%;\n        margin: 0;\n        color: #555;\n    }\n`;\n\nconst logInStyle = {\n    position: 'relative',\n    top: '65px'\n}\n\nexport default class Login extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            LoggedIn: false,\n            username: '',\n            password: '',\n            first: false,\n            token: '',\n            wrongLogin:false\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    myChangeHandlerUserName = (event) => {\n        this.setState({username: event.target.value});\n    }\n\n    myChangeHandlerPassword = (event) => {\n        this.setState({password: event.target.value});\n    }\n\n\n\n    //login click method\n    async handleSubmit(event) {\n        event.preventDefault()\n        const loginForm = new FormData()\n        loginForm.append(\"username\", this.state.username);\n        loginForm.append(\"password\", this.state.password);\n        //const jsonLogin = {\"email\": this.state.username, \"password\": this.state.password};\n        const response = await this.sendreq(loginForm)\n        console.log(response.token)\n        if (response.token !== 'Invalid username and/or password'){\n            this.props.toggleLoggedIn()\n            this.props.setToken(response.token)\n            this.props.setUserName(this.state.username)\n            this.props.history.push('/userMenu')\n        }\n        else{\n            this.setState({wrongLogin: true});\n        }\n    }\n\n    //sends login get request\n    async sendreq(jsonLogin) {\n        const {data: response} = await axios.post('https://forecast-6j2gkews6a-uw.a.run.app/Login',  jsonLogin);\n        return response\n    }\n\n    displayWrongPassword = () => {\n        if(this.state.wrongLogin === true){\n            return (\n                <p style={{color: \"#e60000\"}}> Invalid username and/or password</p>\n            );\n        }\n    }\n\n\n\n    render() {\n        if (this.props.isLoggedIn === false) {\n            return (\n                <div>\n                <GlobalStyle/>\n                <form style={logInStyle} onSubmit = {this.handleSubmit} className = 'form'>\n                    <h3 style={{color: \"#26688E\"}}>Log In</h3>\n\n                    <div className=\"form-group\">\n                        <label style={{color: \"#26688E\"}}>Username</label>\n                        <input style={{backgroundColor: \"#1B1B1B\", borderColor:\"#1B1B1B\", color: '#fff'}} type=\"text\" className=\"form-control\" onChange = {this.myChangeHandlerUserName} placeholder=\"Enter username\" />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label style={{color: \"#26688E\"}}>Password</label>\n                        <input style={{backgroundColor: \"#1B1B1B\", borderColor:\"#1B1B1B\", color: '#fff'}} type=\"password\" className=\"form-control\" onChange = {this.myChangeHandlerPassword} placeholder=\"Enter password\" />\n                    </div>\n\n                    <button type=\"submit\" className=\"btn btn-primary btn-block\" style={{backgroundColor: \"#26688E\", borderColor: \"#26688E\"}}>Log In</button>\n                    <p className=\"forgot-password text-right\">\n                            Forgot <a style={{color: \"#26688E\"}} href=\"/\">password?</a>\n                    </p>\n                    {this.displayWrongPassword()}\n                </form>\n                </div>\n            );\n        }\n        else {\n            return(\n                <h1>Hello</h1>\n            );\n        }\n    }\n\n    \n}","import axios from 'axios';\nimport React from 'react';\nimport {useForm} from 'react-hook-form';\nimport './FileUpload.css'\nimport styled, {createGlobalStyle, css} from 'styled-components';\n\nconst GlobalStyle=createGlobalStyle`\n    html {\n        height: 100px;\n    }\n\n    body {\n        font-family: Arial, Helvetica, sans-serif;\n        background: #1B1B1B;\n        height: 100%;\n        margin: 0;\n        color: #555;\n    }\n`;\n\n\nconst formStyle = {\n    position: 'absolute',\n    top: '150px',\n    left: '450px'\n};\n\nconst headerStyle = {\n    position: 'absolute',\n    top: '100px',\n    left: '435px',\n    color: \"#26688E\"\n}\n\nconst FileUpload = (props) => {\n\n    const {register, handleSubmit} = useForm()\n\n    const onSubmit = (data) => {\n        //const formData = new FormData()\n        props.fData.append(\"file\", data.csv[0]);\n        props.history.push('/config');\n        // axios.post('http://127.0.0.1:5000/sendCSV', formData, {\n        //     headers: {\n        //         \"Authorization\": props.token\n        //     }\n        // }).then(res => console.log(res)).catch(err => console.warn(err))\n    }\n\n    return (\n        <div>\n            <GlobalStyle/>\n            <h2 style={headerStyle}>Please upload your csv file here!</h2>\n            <form onSubmit={handleSubmit(onSubmit)} style={formStyle} className='form'>\n                <input style={{color: \"#26688E\"}} ref={register} type=\"file\" name=\"csv\" />\n                <button className=\"btn btn-primary btn-block\" style={{margin: '10px', position: 'relative', left: '0px', top: '20px', backgroundColor: \"#26688E\", borderColor: \"#26688E\"}}>Submit</button>\n            </form>\n        </div>\n    );\n}\n\nexport default FileUpload;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport yaml from 'js-yaml';\nimport YAML from 'yaml';\nimport download from 'downloadjs';\nimport './configComp.css';\nimport ClimbingBoxLoader from \"react-spinners/ClimbingBoxLoader\";\nimport { css } from \"@emotion/core\";\nimport { CsvToHtmlTable } from 'react-csv-to-table';\nimport Button from 'react-bootstrap/Button';\nimport styled, {createGlobalStyle} from 'styled-components';\n\nconst GlobalStyle=createGlobalStyle`\n    html {\n        height: 100px;\n    }\n\n    body {\n        font-family: Arial, Helvetica, sans-serif;\n        background: #1B1B1B;\n        height: 100%;\n        margin: 0;\n        color: #555;\n    }\n`;\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  position: relative;\n  top: 100px;\n`;\n\nconst configFormStyle = {\n    position: 'absolute',\n    left: '400px',\n    top: '100px'\n};\n\nconst loadTextStyle={\n    position: 'relative',\n    top: \"100px\",\n    left: \"475px\",\n    //font: \"100000px\"\n    color: \"#36D7B7\"\n};\n\nconst loadTextStyle2={\n    position: 'relative',\n    top: \"150px\",\n    left: \"40px\",\n    //font: \"100000px\"\n    color: \"#36D7B7\"\n};\n\nconst downloadButtonStyle={\n    position: 'relative',\n    top: \"200px\",\n    left: \"-295px\",\n    //font: \"100000px\"\n};\n\nconst initialState = {\n    input_name: 'input.csv',\n    output_name: 'result',\n    time_format_type: 'index',\n    horizon: +3,\n    backtest: '',\n    eval_metric: 'wape',\n    display_metric: '',\n    use_gpu: 'no',\n    threads: 0,\n    algorithm: '',\n    save_data: ''\n};\n\n\nexport default class configComp extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            input_name: 'input.csv',\n            output_name: 'result',\n            time_format_type: 'index',\n            horizon: +3,\n            backtest: '',\n            eval_metric: 'wape',\n            display_metric: '',\n            use_gpu: 'no',\n            threads: 0,\n            algorithm: '',\n            save_data: '',\n\n            //not relating to form\n            submitted:'',\n\n            response:false\n        }\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    updateOnRes = (res) => {\n        let csvData = res.data\n        //const newCSV = d3.csv(csvData, function(csvData) { console.log(csvData); });\n        //let newCSV = csvToJson.getJsonFromCsv(csvData)\n        //console.log(newCSV)\n        //this.props.res_result=csvData;\n        //console.log(this.props.res_result)\n        this.setState({response: csvData})\n        //console.log(this.state.response)\n        this.props.fData.delete(\"file\")\n        this.props.fData.delete(\"file2\")\n        this.setState(initialState)\n        //download(this.state.response, 'result.csv', 'csv')\n        //console.log(this.state.respose)\n       //this.props.history.push('/displayResult');\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault()\n        //parse the YAML file\n        const object = {\n            input_name: this.state.input_name,\n            output_name: this.state.output_name,\n            time_format_type: this.state.time_format_type,\n            forecast: {\n                horizon: parseInt(this.state.horizon)\n            },\n            backtest: {\n                evaluation_metric: this.state.eval_metric\n            },\n            hardware: {\n                use_gpu: this.state.use_gpu,\n                threads: this.state.threads\n            }\n        }\n\n        if (this.state.save_data!=='') object[\"save_data\"] = this.state.save_data\n        if (this.state.algorithm!=='') object['algorithms'] = this.state.algorithm\n        if (this.state.backtest !== '') object['backtest']['backtest_start_time'] = parseInt(this.state.backtest)\n        if (this.state.display_metric !== '') object['backtest']['display_metric'] = this.state.display_metric\n        if (this.state.threads !== '') object['hardware']['threads'] = parseInt(this.state.threads)\n        console.log(object)\n\n        //const yamlObject = yaml.dump(object, {'sortKeys': false});\n        const yamlObject = new YAML.Document()\n        yamlObject.contents = object\n        console.log(object);\n\n        this.props.fData.append(\"file2\", yamlObject);\n        //console.log(this.props.fData)\n\n        this.setState({submitted: true});\n\n        //console.log(this.state.submitted)\n\n        //make request\n        axios.post('https://forecast-6j2gkews6a-uw.a.run.app/sendCSV', this.props.fData, {\n            headers: {\n                \"Authorization\": this.props.token\n            }\n        })\n        //.then(res => download(res.data, 'result.csv', 'csv'))\n        .then(res => {\n            //this.props.res_result=res;\n            //this.props.history.push('/displayResult');\n            this.updateOnRes(res);\n            //this.props.res_result=res.data\n        })\n        .catch(err => console.warn(err))\n\n    }\n\n    clickDownload = () => {\n        download(this.state.response, 'result.csv', 'csv')\n    }\n\n    myChangeHandlerSaveData = (event) => {\n        this.setState({save_data: event.target.value});\n    }\n\n    myChangeHandlerAlgorithm = (event) => {\n        this.setState({algorithm: event.target.value});\n    }\n\n    myChangeHandlerInputName = (event) => {\n        this.setState({input_name: event.target.value});\n    }\n\n    myChangeHandlerOutputName = (event) => {\n        this.setState({output_name: event.target.value});\n    }\n\n    myChangeHandlerTimeFormat = (event) => {\n        this.setState({time_format_type: event.target.value});\n    }\n\n    myChangeHandlerHorizon = (event) => {\n        this.setState({horizon: event.target.value});\n    }\n\n    myChangeHandlerBacktest = (event) => {\n        this.setState({backtest: event.target.value});\n    }\n\n    myChangeHandlerEvaluation = (event) => {\n        this.setState({eval_metric: event.target.value});\n    }\n\n    myChangeHandlerDisplay = (event) => {\n        this.setState({display_metric: event.target.value});\n    }\n\n    myChangeHandlerGPU = (event) => {\n        this.setState({use_gpu: event.target.value});\n    }\n\n    myChangeHandlerThreads = (event) => {\n        this.setState({threads: event.target.value});\n    }\n\n    render() {\n        if (this.state.submitted!==true && this.state.response===false){\n            return (\n                <div>\n                <GlobalStyle/>\n                <form style={configFormStyle} onSubmit={this.handleSubmit} className=\"form\">\n                    <h3 style={{color: \"#26688E\"}}>Configs (all are optional)</h3>\n\n                    <div className=\"form-group\">\n                        <label style={{color: \"#36D7B7\"}}> Would you like to save this dataset? (yes/no)</label>\n                        <input style={{backgroundColor: \"#1B1B1B\", borderColor:\"#1B1B1B\", color: '#fff'}} type=\"text\" className=\"form-control\" onChange = {this.myChangeHandlerSaveData} placeholder=\"default: no\" />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label style={{color: \"#36D7B7\"}}> Select Algorithm (automl, nbeats, arima, regression)</label>\n                        <input style={{backgroundColor: \"#1B1B1B\", borderColor:\"#1B1B1B\", color: '#fff'}} type=\"text\" className=\"form-control\" onChange = {this.myChangeHandlerAlgorithm} placeholder=\"default: automl\" />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label style={{color: \"#fff\"}}>Input Name</label>\n                        <input style={{backgroundColor: \"#1B1B1B\", borderColor:\"#1B1B1B\", color: '#fff'}} type=\"text\" className=\"form-control\" onChange = {this.myChangeHandlerInputName} placeholder=\"default: input.csv\" />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label style={{color: \"#fff\"}}>Output Name</label>\n                        <input style={{backgroundColor: \"#1B1B1B\", borderColor:\"#1B1B1B\", color: '#fff'}} type=\"text\" className=\"form-control\" onChange = {this.myChangeHandlerOutputName} placeholder=\"default: result.csv\" />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label style={{color: \"#fff\"}}>Time Format Type (standard or index)</label>\n                        <input style={{backgroundColor: \"#1B1B1B\", borderColor:\"#1B1B1B\", color: '#fff'}} type=\"text\" className=\"form-control\" onChange = {this.myChangeHandlerTimeFormat} placeholder=\"default: index\" />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label style={{color: \"#26688E\"}}>Forecast Horizon (+ horizon desired)</label>\n                        <input style={{backgroundColor: \"#1B1B1B\", borderColor:\"#1B1B1B\", color: '#fff'}} type=\"text\" className=\"form-control\" onChange = {this.myChangeHandlerHorizon} placeholder=\"default: +3\" />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label style={{color: \"#26688E\"}}>Backtest Start Time (- desired backtest start)</label>\n                        <input style={{backgroundColor: \"#1B1B1B\", borderColor:\"#1B1B1B\", color: '#fff'}} type=\"text\" className=\"form-control\" onChange = {this.myChangeHandlerBacktest} placeholder=\"default: last 10% of data\" />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label style={{color: \"#36D7B7\"}}>Evaluation Metric (wape,mape,mae,mae%,rmse)</label>\n                        <input style={{backgroundColor: \"#1B1B1B\", borderColor:\"#1B1B1B\", color: '#fff'}} type=\"text\" className=\"form-control\" onChange = {this.myChangeHandlerEvaluation} placeholder=\"default: wape\" />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label style={{color: \"#36D7B7\"}}>Display Metric (wape,mape,mae,mae%,rmse)</label>\n                        <input style={{backgroundColor: \"#1B1B1B\", borderColor:\"#1B1B1B\", color: '#fff'}} type=\"text\" className=\"form-control\" onChange = {this.myChangeHandlerDisplay} placeholder=\"Other metrics to show\" />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label style={{color: \"#fff\"}}>Use GPU? (yes/no)</label>\n                        <input style={{backgroundColor: \"#1B1B1B\", borderColor:\"#1B1B1B\", color: '#fff'}} type=\"text\" className=\"form-control\" onChange = {this.myChangeHandlerGPU} placeholder=\"default: no\" />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label style={{color: \"#fff\"}}>Threads to Use</label>\n                        <input style={{backgroundColor: \"#1B1B1B\", borderColor:\"#1B1B1B\", color: '#fff'}} type=\"text\" className=\"form-control\" onChange = {this.myChangeHandlerThreads} placeholder=\"default: 0\" />\n                    </div>\n\n                    <button type=\"submit\" className=\"btn btn-primary btn-block\" style={{backgroundColor: \"#26688E\", borderColor: \"#26688E\"}}>Submit</button>\n\n                </form>\n                </div>\n            );\n        }\n        else if (this.state.response===false && this.state.submitted===true){\n            return (\n                //<Spinner animation=\"border\" />\n                <div>\n                    <GlobalStyle/>\n                    <ClimbingBoxLoader color={'#36D7B7'} loading={true} css={override} size={15} />\n                    <strong style={loadTextStyle}>Please wait, as we generate your forecast!</strong>\n                </div>\n            );\n        }\n        else if (this.state.response!==false){\n            return (\n                <>\n                    <GlobalStyle/>\n                    <strong style={loadTextStyle}>Your results are ready!</strong>\n                    <strong style={loadTextStyle2}>Click to download your .csv file with your results</strong>\n                    <Button variant=\"outline-primary\" style={downloadButtonStyle} size='lg' onClick={this.clickDownload}>Download</Button>{' '}\n                </>\n            );\n        }\n    }\n\n};\n","import React, {Component} from 'react' ;\nimport { CsvToHtmlTable } from 'react-csv-to-table';\n\nexport default class DisplayResult extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            yes: ''\n        };\n\n        //this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>{this.props.test}</h1>\n                <h1>{this.props.res_result}</h1>\n            </div>\n        );\n    }\n\n}\n\n//<CsvToHtmlTable \n  //              data = {this.props.res_result}\n    //            csvDelimiter=\",\"\n      //          tableClassName=\"table table-striped table-hover\"\n        //    />","import axios from 'axios';\nimport React from 'react';\nimport {useForm} from 'react-hook-form';\nimport './FileUploadTrial.css'\nimport styled, {createGlobalStyle, css} from 'styled-components';\n\nconst GlobalStyle=createGlobalStyle`\n    html {\n        height: 100px;\n    }\n\n    body {\n        font-family: Arial, Helvetica, sans-serif;\n        background: #1B1B1B;\n        height: 100%;\n        margin: 0;\n        color: #555;\n    }\n`;\n\n\nconst sharedStyle = css`\n    background-color: #eee;\n    height: 40px;\n    border-radius: 5px;\n    border: 1px solid #ddd;\n    margin: 10px 0 20px 0;\n    padding: 20px;\n    box-sizing: border-box;\n`;\n\nconst StyledFormrapper = styled.form`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 850px;\n    padding: 0 20px;\n\n`;\n\nconst StyledForm = styled.form`\n    width: 100%;\n    max-width: 700px;\n    padding: 50px;\n    background-color: #fff;\n    border-radius: 10px;\n    box-size: border-box;\n    box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.2);\n`;\n\nconst StyledButton = styled.button`\n    display: block;\n    background-color: #f7797d;\n    color: #fff;\n    font-size: .9rem;\n    border: 0;\n    border-radius: 5px;\n    height: 40px;\n    padding: 0 20px;\n    cursor: pointer;\n    box-sizing: border-box;\n    margin: 10px;\n    position: relative;\n    left: -10px;\n`\n\nconst StyledInput = styled.input`\n\n`\n\nconst StyledTextArea = styled.textarea`\n\n`\n\nconst StyledFieldset = styled.fieldset`\n\n`\n\nconst StyledError = styled.div`\n\n`\n\n\nconst formStyle = {\n    position: 'absolute',\n    top: '150px',\n    left: '450px',\n};\n\nconst headerStyle = {\n    position: 'absolute',\n    top: '100px',\n    left: '450px',\n    color: \"#26688E\"\n}\n\nconst textStyle = {\n    padding: '25px',\n    left: '100px'\n};\n\n\nconst FileUploadTrial = (props) => {\n\n    const {register, handleSubmit} = useForm()\n\n    const onSubmit = (data) => {\n        //const formData = new FormData()\n        props.fData.append(\"file\", data.csv[0]);\n        props.history.push('/trialForm');\n        // axios.post('http://127.0.0.1:5000/sendCSV', formData, {\n        //     headers: {\n        //         \"Authorization\": props.token\n        //     }\n        // }).then(res => console.log(res)).catch(err => console.warn(err))\n    }\n\n    return (\n        // style={formStyle}\n        <div>\n                <GlobalStyle/>\n                <h1 style = {headerStyle}>Data upload</h1>\n                <form style = {formStyle} onSubmit={handleSubmit(onSubmit)} className=\"form\">\n                    <input style={{color: \"#26688E\"}}f ref={register} type=\"file\" name=\"csv\" />\n                    <button className=\"btn btn-primary btn-block\" style={{margin: '10px', position: 'relative', left: '0px', top: '20px', backgroundColor: \"#26688E\", borderColor: \"#26688E\"}}>Upload</button>\n                </form>\n                <h4 style={{position: 'absolute', top: '400px', left: '50px', color: '#fff'}}>Upload your data as a .csv file here, and get the forecasts you desire!</h4>\n                <h4 style={{position: 'absolute', top: '450px', left: '50px', color: '#fff'}}>To see how your data should be formatted in further detail, please refer to <a href='/About' style={{color: '#36D7B7'}}> About </a></h4>\n        </div>\n    );\n}\n\nexport default FileUploadTrial;\n\n// <h2 style={headerStyle}>Please upload your csv file here!</h2>","import React, { Component } from 'react';\nimport axios from 'axios';\nimport yaml from 'js-yaml';\nimport YAML from 'yaml';\nimport download from 'downloadjs';\nimport './configCompTrial.css';\nimport ClimbingBoxLoader from \"react-spinners/ClimbingBoxLoader\";\nimport { css } from \"@emotion/core\";\nimport { CsvToHtmlTable } from 'react-csv-to-table';\n//import styled from \"styled-components\";\nimport Button from 'react-bootstrap/Button';\nimport styled, {createGlobalStyle} from 'styled-components';\n\nconst GlobalStyle=createGlobalStyle`\n    html {\n        height: 100px;\n    }\n\n    body {\n        font-family: Arial, Helvetica, sans-serif;\n        background: #1B1B1B;\n        height: 100%;\n        margin: 0;\n        color: #555;\n    }\n`;\n\nconst configFormStyle = {\n    position: 'absolute',\n    left: '400px',\n    top: '100px'\n};\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  position: relative;\n  top: 100px;\n`;\n\nconst loadTextStyle={\n    position: 'relative',\n    top: \"100px\",\n    left: \"445px\",\n    //font: \"100000px\"\n    color: \"#36D7B7\"\n};\n\nconst loadTextStyle2={\n    position: 'relative',\n    top: \"150px\",\n    left: \"45px\",\n    //font: \"100000px\"\n    color: \"#36D7B7\"\n};\n\nconst downloadButtonStyle={\n    position: 'relative',\n    top: \"200px\",\n    left: \"-295px\",\n    //font: \"100000px\"\n};\n\nconst initialState = {\n    input_name: 'input.csv',\n    output_name: 'result',\n    time_format_type: 'index',\n    horizon: +3,\n    backtest: '',\n    eval_metric: 'wape',\n    display_metric: '',\n    use_gpu: 'no',\n    threads: 0,\n    algorithm: '',\n};\n\n\nexport default class ConfigCompTrial extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            input_name: 'input.csv',\n            output_name: 'result',\n            time_format_type: 'index',\n            horizon: +3,\n            backtest: '',\n            eval_metric: 'wape',\n            display_metric: '',\n            use_gpu: 'no',\n            threads: 0,\n            algorithm: '',\n\n            //not relating to form\n            submitted:'',\n\n            response:false\n        }\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    updateOnRes = (res) => {\n        let csvData = res.data\n        console.log(csvData.split(','))\n        //const newCSV = d3.csv(csvData, function(csvData) { console.log(csvData); });\n        //let newCSV = csvToJson.getJsonFromCsv(csvData)\n        //console.log(newCSV)\n        //this.props.res_result=csvData;\n        //console.log(this.props.res_result)\n        this.setState({response: csvData})\n        this.props.fData.delete('file')\n        this.props.fData.delete('file2')\n        this.setState(initialState)\n        //download(this.state.response, 'result.csv', 'csv')\n        //console.log(this.state.respose)\n       //this.props.history.push('/displayResult');\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault()\n        //parse the YAML file\n        const object = {\n            input_name: this.state.input_name,\n            output_name: this.state.output_name,\n            time_format_type: this.state.time_format_type,\n            forecast: {\n                horizon: parseInt(this.state.horizon)\n            },\n            backtest: {\n                evaluation_metric: this.state.eval_metric\n            },\n            hardware: {\n                use_gpu: this.state.use_gpu,\n                threads: this.state.threads\n            }\n        }\n\n        if (this.state.algorithm!=='') object['algorithms'] = this.state.algorithm\n        if (this.state.backtest !== '') object['backtest']['backtest_start_time'] = parseInt(this.state.backtest)\n        if (this.state.display_metric !== '') object['backtest']['display_metric'] = this.state.display_metric\n        if (this.state.threads !== '') object['hardware']['threads'] = parseInt(this.state.threads)\n\n        //const yamlObject = yaml.dump(object, {'sortKeys': false});\n        const yamlObject = new YAML.Document()\n        yamlObject.contents = object\n        console.log(yamlObject);\n\n        this.props.fData.append(\"file2\", yamlObject);\n        console.log(this.props.fData)\n\n        this.setState({submitted: true});\n\n        console.log(this.state.submitted)\n\n        //make request\n        axios.post('https://forecast-6j2gkews6a-uw.a.run.app/sendCSV', this.props.fData, {\n            headers: {\n                \"Authorization\": \"trial\"\n            }\n        })\n        //.then(res => download(res.data, 'result.csv', 'csv'))\n        .then(res => {\n            //this.props.res_result=res;\n            //this.props.history.push('/displayResult');\n            this.updateOnRes(res);\n            //this.props.res_result=res.data\n        })\n        .catch(err => console.warn(err))\n\n    }\n\n    clickDownload = () => {\n        download(this.state.response, 'result.csv', 'csv')\n    }\n\n    myChangeHandlerAlgorithm = (event) => {\n        this.setState({algorithm: event.target.value});\n    }\n\n    myChangeHandlerInputName = (event) => {\n        this.setState({input_name: event.target.value});\n    }\n\n    myChangeHandlerOutputName = (event) => {\n        this.setState({output_name: event.target.value});\n    }\n\n    myChangeHandlerTimeFormat = (event) => {\n        this.setState({time_format_type: event.target.value});\n    }\n\n    myChangeHandlerHorizon = (event) => {\n        this.setState({horizon: event.target.value});\n    }\n\n    myChangeHandlerBacktest = (event) => {\n        this.setState({backtest: event.target.value});\n    }\n\n    myChangeHandlerEvaluation = (event) => {\n        this.setState({eval_metric: event.target.value});\n    }\n\n    myChangeHandlerDisplay = (event) => {\n        this.setState({display_metric: event.target.value});\n    }\n\n    myChangeHandlerGPU = (event) => {\n        this.setState({use_gpu: event.target.value});\n    }\n\n    myChangeHandlerThreads = (event) => {\n        this.setState({threads: event.target.value});\n    }\n\n    render() {\n        if (this.state.submitted!==true && this.state.response===false){\n            return (\n                <div>\n                <GlobalStyle/>\n                <form style={configFormStyle} onSubmit={this.handleSubmit} className=\"form\">\n                    <h3 style={{color: \"#26688E\"}}>Configs (all are optional)</h3>\n\n\n                    <div className=\"form-group\">\n                        <label style={{color: \"#36D7B7\"}}> Select Algorithm (automl, nbeats, arima, regression)</label>\n                        <input style={{backgroundColor: \"#1B1B1B\", borderColor:\"#1B1B1B\", color: '#fff'}} type=\"text\" className=\"form-control\" onChange = {this.myChangeHandlerAlgorithm} placeholder=\"default: automl\" />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label style={{color: \"#36D7B7\"}}>Input Name</label>\n                        <input style={{backgroundColor: \"#1B1B1B\", borderColor:\"#1B1B1B\", color: '#fff'}} type=\"text\" className=\"form-control\" onChange = {this.myChangeHandlerInputName} placeholder=\"default: input.csv\" />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label style={{color: \"#36D7B7\"}}>Output Name</label>\n                        <input style={{backgroundColor: \"#1B1B1B\", borderColor:\"#1B1B1B\", color: '#fff'}} type=\"text\" className=\"form-control\" onChange = {this.myChangeHandlerOutputName} placeholder=\"output name...\" />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label style={{color: \"#36D7B7\"}}>Time Format Type (standard or index)</label>\n                        <input style={{backgroundColor: \"#1B1B1B\", borderColor:\"#1B1B1B\", color: '#fff'}} type=\"text\" className=\"form-control\" onChange = {this.myChangeHandlerTimeFormat} placeholder=\"default: index\" />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label style={{color: \"#36D7B7\"}}>Forecast Horizon (+ horizon desired)</label>\n                        <input style={{backgroundColor: \"#1B1B1B\", borderColor:\"#1B1B1B\", color: '#fff'}} type=\"text\" className=\"form-control\" onChange = {this.myChangeHandlerHorizon} placeholder=\"default: +3\" />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label style={{color: \"#36D7B7\"}}>Backtest Start Time (- desired backtest start)</label>\n                        <input style={{backgroundColor: \"#1B1B1B\", borderColor:\"#1B1B1B\", color: '#fff'}} type=\"text\" className=\"form-control\" onChange = {this.myChangeHandlerBacktest} placeholder=\"default: last 10% of data\" />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label style={{color: \"#36D7B7\"}}>Evaluation Metric (wape,mape,mae,mae%,rmse)</label>\n                        <input style={{backgroundColor: \"#1B1B1B\", borderColor:\"#1B1B1B\", color: '#fff'}} type=\"text\" className=\"form-control\" onChange = {this.myChangeHandlerEvaluation} placeholder=\"default: wape\" />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label style={{color: \"#36D7B7\"}}>Display Metric (wape,mape,mae,mae%,rmse)</label>\n                        <input style={{backgroundColor: \"#1B1B1B\", borderColor:\"#1B1B1B\", color: '#fff'}} type=\"text\" className=\"form-control\" onChange = {this.myChangeHandlerDisplay} placeholder=\"default: none\" />\n                    </div>\n\n                    <button style={{backgroundColor: \"#26688E\", borderColor: \"#26688E\"}} type=\"submit\" className=\"btn btn-primary btn-block\">Submit</button>\n\n                </form>\n                </div>\n            );\n        }\n        else if (this.state.response===false && this.state.submitted===true){\n            return (\n                //<Spinner animation=\"border\" />\n                <div>\n                    <GlobalStyle/>\n                    <ClimbingBoxLoader color={'#36D7B7'} loading={true} css={override} size={15} />\n                    <strong style={loadTextStyle}>Please wait, as we generate your forecast!</strong>\n                </div>\n            );\n        }\n        else if (this.state.response!==false){\n            return (\n                <>\n                    <GlobalStyle/>\n                    <strong style={loadTextStyle}>Your results are ready!</strong>\n                    <strong style={loadTextStyle2}>Click to download your .csv file with your results</strong>\n                    <Button variant=\"outline-primary\" style={downloadButtonStyle} size='lg' onClick={this.clickDownload}>Download</Button>{' '}\n                </>\n            );\n        }\n    }\n\n};\n","import React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\nimport styled, {createGlobalStyle, css} from 'styled-components';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { makeStyles, ThemeProvider } from \"@material-ui/core\";\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Slide, Fade } from \"react-awesome-reveal\";\n\n\nconst GlobalStyle=createGlobalStyle`\n    html {\n        height: 100px;\n    }\n\n    body {\n        font-family: Arial, Helvetica, sans-serif;\n        background: #1B1B1B;\n        height: 100%;\n        margin: 0;\n        color: #555;\n    }\n`;\n\nconst HoverText = styled.div`\n\t:hover {\n\t\tcursor: pointer;\n\t}\n`\n\n\nconst welcomeStyle = {\n    position: 'absolute',\n    top: '100px',\n    left: '50px',\n    color: \"#26688E\"\n};\n\nconst uploadDataButtonStyle = {\n    position: 'absolute',\n    top: '200px',\n    left: '50px',\n    color: \"#26688E\",\n    borderColor: \"#26688E\"\n};\n\nconst getDataStyle = {\n    position: 'absolute',\n    top: '275px',\n    left: '50px',\n    color: \"#36D7B7\",\n};\n\nconst SelectHeaderStyle = {\n    position: 'absolute',\n    top: '100px',\n    left: '50px'\n};\n\n\nexport default class UserMenu extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            getDataClicked: false,\n            dataArray: '',\n            leftVar: '50px',\n            leftTrack:50,\n            rows: [],\n            selected: null\n        };\n    }\n\n    handleTableData = (res) => {\n        var rowsArray=[]\n        var counter= 0\n        for (var i in res){\n            rowsArray.push({id: counter, dataName: res[i], dataID: i})\n            counter+=1;\n        }\n\n        console.log(rowsArray);\n        this.setState({rows: rowsArray});\n    }\n\n    componentDidMount() {\n        console.log('Hello World');\n        axios.get('https://forecast-6j2gkews6a-uw.a.run.app/getSavedData', {\n            headers: {\n                \"Authorization\": this.props.token\n            }\n        })\n        .then(res => {\n            this.handleTableData(res.data);\n        })\n        .catch(err => console.warn(err))\n    }\n\n    goToUpload = () => {\n        this.props.history.push('fileUpload')\n    };\n\n    dataSelected = (selectedOne) => {\n        this.props.setSelected(selectedOne);\n        this.props.history.push('/selectedSavedData')\n    };\n\n    makeDataButtons = (data) => {\n        return(\n                <Button variant=\"outline-primary\" style={{position: 'absolute', top: '275px', left: data[2], color: \"#26688E\", borderColor: \"#26688E\"}} size='lg' onClick={() => {this.dataSelected(data[0])}}>{data[0]}({data[1]})</Button>\n        );\n    }\n\n    displayData = (inp) => {\n        let leftComp = 50\n        var asArray = []\n        for (var i in inp){\n            asArray.push([i, inp[i], leftComp.toString() + 'px']);\n            leftComp = leftComp+275\n        }\n        console.log(asArray)\n        this.setState({dataArray: asArray, getDataClicked: true})\n    };\n\n    listDatasets = () => {\n        axios.get('https://forecast-6j2gkews6a-uw.a.run.app/getSavedData', {\n            headers: {\n                \"Authorization\": this.props.token\n            }\n        })\n        .then(res => {\n            this.displayData(res.data);\n        })\n        .catch(err => console.warn(err))\n    }\n\n    selectOperation = (selection) => {\n        this.setState({selected: parseInt(selection.rowIds[0])})\n        console.log(this.state.selected)\n        console.log(this.state.rows)\n    }\n\n    handleSelectDataClick = () => {\n        this.props.setSelected(this.state.rows[this.state.selected]['dataID']);\n        this.props.history.push('/selectedSavedData');\n    }\n\n    frontendDeleteRow = (res) => {\n        var update = this.state.rows\n        update.splice(this.state.selected, 1)\n        var counter = 0;\n        for(var i=0; i < update.length; i++){\n            update[i].id=counter.toString()\n            counter+=1\n        }\n        this.setState({rows: []});\n        this.setState({rows: update});\n        this.setState({selected: null});\n        //this.forceUpdate();\n    }\n\n    deleteDataRow = () => {\n        axios.delete('https://forecast-6j2gkews6a-uw.a.run.app/deleteData', {\n            headers: {\n                \"Authorization\": this.props.token,\n                \"data_id\": this.state.rows[this.state.selected]['dataID']\n            }\n        })\n        .then(res => {\n            this.frontendDeleteRow(res);\n        })\n        .catch(err => console.warn(err))\n    }\n\n    showButton = () => {\n        if(this.state.selected!==null){\n            return (\n                <div>\n                    <button \n                        type=\"submit\" \n                        className=\"btn btn-primary btn-block\"\n                        style={{color: '#000', backgroundColor: \"#36D7B7\", borderColor: \"#36D7B7\", width: '200px', position: 'absolute', top: '665px', left: '555px'}}\n                        onClick={() => {this.handleSelectDataClick()}}\n                    >\n                        Select Data\n                    </button>\n                    <HoverText>\n                    <DeleteIcon style={{position: 'absolute', top: '675px', left: '775px', color: \"#D11A2A\"}} onClick={() => {this.deleteDataRow()}}/>\n                    </HoverText>\n                </div>\n            )\n        }\n    }\n    \n\n    render () {\n\n        const columns = [\n            {field:'id', headerName: 'index', width: 100},\n            {field: 'dataName', headerName: 'Dataset Name', width: 180, description: \"The given name on the dataset\"},\n            {field: 'dataID', headerName: 'Dataset ID', width: 180, description: \"The unique data ID that identifies this dataset as listed in your downloaded results\"}\n        \n        ]\n\n        const darkTheme = createMuiTheme({\n            palette: {\n              type: 'dark',\n            },\n          });\n\n        if (this.state.getDataClicked===false){\n            return (\n                <div>\n                    <GlobalStyle/>\n                    <h1 style={welcomeStyle}>Hello {this.props.username},</h1>\n                    <Button variant=\"btn btn-primary btn-block\" style={{backgroundColor: \"#26688E\", borderColor: \"#26688E\", width: '350px', position: 'absolute', top: '175px', left: '50px'}} size='lg' onClick={this.goToUpload}>Upload New Data</Button>{' '}\n                    <h2 style={getDataStyle}>Work With Previously Saved Data</h2>{' '}\n                    <Fade>\n                    <div style={{ height: 300, width: '40%', position: 'absolute', top: '350px', left: '375px' }}>\n                        <ThemeProvider theme={darkTheme}>\n                        <DataGrid rows={this.state.rows} columns={columns} pageSize={5} disableMultipleSelection={true} onSelectionChange={(newSelection) => {this.selectOperation(newSelection)}} />\n                        </ThemeProvider>\n                    </div>\n                    </Fade>\n                    {this.showButton()}\n                </div>\n            );\n        }\n        else{\n            return (\n                <div>\n                    <GlobalStyle/>\n                    <h1 style={SelectHeaderStyle}>Please select which data you would like to work with!</h1>\n                    {this.state.dataArray.map(this.makeDataButtons, this)}\n                </div>\n            );\n        }\n    }\n}","import React, { Component, useState } from 'react';\nimport {useForm} from 'react-hook-form';\nimport axios from 'axios';\nimport { css } from \"@emotion/core\";\nimport ClimbingBoxLoader from \"react-spinners/ClimbingBoxLoader\";\nimport download from 'downloadjs';\nimport Button from 'react-bootstrap/Button';\nimport styled, {createGlobalStyle} from 'styled-components';\n\nconst GlobalStyle=createGlobalStyle`\n    html {\n        height: 100px;\n    }\n\n    body {\n        font-family: Arial, Helvetica, sans-serif;\n        background: #1B1B1B;\n        height: 100%;\n        margin: 0;\n        color: #555;\n    }\n`;\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  position: relative;\n  top: 100px;\n`;\n\nconst loadTextStyle={\n    position: 'relative',\n    top: \"100px\",\n    left: \"525px\",\n    //font: \"100000px\"\n    color: \"#36D7B7\"\n};\n\nconst loadTextStyle2={\n    position: 'relative',\n    top: \"150px\",\n    left: \"95px\",\n    //font: \"100000px\"\n    color: \"#36D7B7\"\n};\n\nconst downloadButtonStyle={\n    position: 'relative',\n    top: \"200px\",\n    left: \"-245px\",\n    //font: \"100000px\"\n};\n\nconst formStyle = {\n    position: 'absolute',\n    top: '250px',\n    left: '450px'\n};\n\nconst headerStyle = {\n    position: 'absolute',\n    top: '100px',\n    left: '40px',\n    color: \"#36D7B7\"\n}\n\nconst DataSelected = (props) => {\n\n    const {register, handleSubmit} = useForm()\n\n    const [submitted,updateSubmitted]=useState(false);\n    const [responseGot, updateGot]=useState(false)\n\n    const afterResponse = (res) => {\n        updateGot(res.data);\n        props.fData.delete(\"file\");\n    }\n\n    const onSubmit = (data) => {\n        //const formData = new FormData()\n        updateSubmitted(!submitted);\n        props.fData.append(\"file\", data.csv[0]);\n        axios.post('https://forecast-6j2gkews6a-uw.a.run.app/updateAndPredict', props.fData, {\n            headers: {\n                \"Authorization\": props.token,\n                \"data_id\": props.data_id\n            }\n        })\n        .then(res => {\n            afterResponse(res)\n        })\n        .catch(err => console.warn(err))\n    }\n\n    const clickDownload = () => {\n        download(responseGot, 'result.csv', 'csv')\n    }\n\n    if (submitted===false){\n        return (\n            <div>\n                <GlobalStyle />\n                <h2 style={headerStyle}>Please upload the new data you would like to append to this dataset to get newer forecasts</h2>\n                <form onSubmit={handleSubmit(onSubmit)} style={formStyle} className=\"form\">\n                    <input style={{color: \"#26688E\"}} ref={register} type=\"file\" name=\"csv\" />\n                    <button className=\"btn btn-primary btn-block\" style={{margin: '10px', position: 'relative', left: '0px', top: '20px', backgroundColor: \"#26688E\", borderColor: \"#26688E\"}}>Submit</button>\n                </form>\n            </div>\n        );\n    }\n    else if (submitted===true && responseGot===false){\n        return (\n            <div>\n                <GlobalStyle />\n                <ClimbingBoxLoader color={'#36D7B7'} loading={true} css={override} size={15} />\n                <strong style={loadTextStyle}>Please wait, as we generate your forecast!</strong>\n            </div>\n        );\n    }\n    else{\n        return (\n            <>\n                <GlobalStyle />\n                <strong style={loadTextStyle}>Your results are ready!</strong>\n                <strong style={loadTextStyle2}>Click to download your .csv file with your results</strong>\n                <Button variant=\"outline-primary\" style={downloadButtonStyle} size='lg' onClick={clickDownload}>Download</Button>{' '}\n            </>\n        );\n    }\n\n\n}\n\nexport default DataSelected;","import React, { Component } from 'react';\nimport Typist from 'react-typist';\nimport { Fade, Slide } from \"react-awesome-reveal\";\nimport './AboutPage.css'\nimport Table from 'react-bootstrap/Table';\nimport styled, {createGlobalStyle, css} from 'styled-components';\n\nconst GlobalStyle=createGlobalStyle`\n    html {\n        height: 100px;\n    }\n\n    body {\n        font-family: Arial, Helvetica, sans-serif;\n        background: #ECECF5;\n        height: 100%;\n        margin: 0;\n        color: #555;\n    }\n`;\n\n\nconst HeaderStyle = {\n    position: 'relative',\n    top: '50px',\n    left: '50px'\n};\n\nconst test = {\n    position: 'relative',\n    top: '75px',\n    left: '50px'\n};\n\nconst posList={\n    position: 'relative',\n    left: '-50px',\n    top: \"100px\"\n};\n\nconst InputStyle = {\n    position: 'relative',\n    top: \"100px\",\n    left: '50px'\n};\n\nconst InputText = {\n    position: 'relative',\n    top: \"145px\",\n    left: '130px',\n    right: \"80px\"\n};\n\nexport default class AboutPage extends Component {\n    render () {\n        return (\n            <div>\n                <GlobalStyle/>\n                <Typist>\n                    <h1 style={HeaderStyle}>About The API</h1>\n                </Typist>\n\n                <Fade style={test}>\n                    <strong>Introducing a very user friendly way for anyone, engineers and non-engineers alike, to easily upload time series data and get accurate forecasts fast!</strong>\n                </Fade>\n\n                <center>\n                <strong>\n                    <ol class=\"center\" type=\"1\" style={posList}>\n                        <li>Upload Data</li>\n                        <li>Select configurations if desired (or leave blank!)</li>\n                        <li>Wait for your forecasts</li>\n                    </ol>\n                </strong>\n                </center>\n\n                <Slide direction=\"up\">\n                    <h1 style={InputStyle}> Input Data Format</h1>\n                    <p style={InputText}>Data must be given as a .csv file; <b>The first column must be the time column and second column the data column.</b></p>\n                    <h4 style={{position: 'relative', top: '160px', left: \"130px\"}}>Example:</h4>\n\n                    <Table striped bordered hover size=\"sm\" variant=\"dark\" style={{width: \"500px\", position: 'relative', top: \"185px\", left: \"425px\"}}>\n                        <thead>\n                            <tr>\n                                <th>Date</th>\n                                <th>Items Sold</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>1/1/2021</td>\n                                <td>100</td>\n                            </tr>\n                            <tr>\n                                <td>2/1/2021</td>\n                                <td>250</td>\n                            </tr>\n                            <tr>\n                                <td>2/1/2021</td>\n                                <td>400</td>\n                            </tr>\n                            <tr>\n                                <td>2/1/2021</td>\n                                <td>350</td>\n                            </tr>\n                            <tr>\n                                <td>5/1/2021</td>\n                                <td>475</td>\n                            </tr>\n                        </tbody>\n                    </Table>\n\n                    <h1 style={{position: 'relative', top: '260px', left: \"50px\"}}>Configurations</h1>\n                    <p style={{position: \"relative\", top: \"285px\", left: \"130px\", right: \"80px\"}}>All configurations are optional and are set to default values if their fields are not specified. A variety of configurations are offered for you to best suite</p>\n                    <p style={{position: \"relative\", top: \"290px\", left: \"210px\", right: \"80px\"}}>your data forecasting needs!</p>\n                </Slide>\n            </div>\n        );\n    }\n}","import React, {Component} from 'react' ;\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport LoggedInNavbar from './components/LoggedInNavbar/index';\nimport {BrowserRouter as Router, Switch, Route, withRouter} from 'react-router-dom';\nimport Home from './Pages/index'\nimport Signup from './Pages/Signup'\nimport Login from './Pages/Login'\nimport FileUpload from './Pages/FileUpload';\nimport ConfigComp from './Pages/configComp';\nimport DisplayResult from './Pages/DisplayResult';\nimport FileUploadTrial from './Pages/FileUploadTrial';\nimport ConfigCompTrial from './Pages/configCompTrial.js';\nimport UserMenu from './Pages/UserMenu';\nimport DataSelected from './Pages/DataSelected';\nimport AboutPage from './Pages/AboutPage';\n\nclass App extends Component{\n\n  state = {\n      isLoggedIn: false,\n      token: null,\n      username: '',\n\n      csvFile: new FormData(),\n      Response_Result: '',\n\n      trial_input: new FormData(),\n      selectedSavedData: '',\n      selectedFData: new FormData()\n  }\n\n  setSelected = (inp) => {\n    this.setState({selectedSavedData: inp})\n  };\n\n  setUserName = (name) => {\n    this.setState({username: name})\n  }\n\n  toggleLoggedFalse = () => {\n      this.setState({\n        isLoggedIn: true\n      });\n  };\n\n  setToken = (theToken) => {\n    this.setState({\n      token: theToken\n    })\n  }\n\n  logOut = () => {\n    this.setState({\n      token: '',\n      isLoggedIn: false\n    });\n  }\n\n\n\n  render() {\n    if (this.state.isLoggedIn===false){\n      return (\n        <Router basename=\"/forecast-ai\">\n          <Navbar/>\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/Signup\" render={(props) => (<Signup {...props}/>)} />\n            <Route \n              path=\"/Login\" \n              render={(props) => (\n                <Login {...props} isLoggedIn={this.state.isLoggedIn} toggleLoggedIn={this.toggleLoggedFalse} setToken={this.setToken}  setUserName={this.setUserName}/>\n              )} \n            />\n            <Route path=\"/trial\" render={(props) => (<FileUploadTrial {...props} fData={this.state.trial_input}/>)} />\n            <Route path=\"/trialForm\" render={(props) => (<ConfigCompTrial {...props} fData={this.state.trial_input}/>)} />\n            <Route path=\"/About\" render={(props) => (<AboutPage {...props}/>)} />\n          </Switch>\n        </Router>\n      );\n    }\n    else{\n      return (\n        <Router basename=\"/forecast-ai\">\n            <LoggedInNavbar logOut={this.logOut}/>\n            <Switch>\n              <Route path=\"/fileUpload\" render={(props) => (<FileUpload {...props} fData={this.state.csvFile}/>)} />\n              <Route path=\"/config\" render={(props) => (<ConfigComp {...props} fData={this.state.csvFile} token={this.state.token} res_result={this.state.Response_Result}/>)} />\n              <Route path=\"/displayResult\" render={(props) => (<DisplayResult {...props} res_result={this.state.Response_Result} test={'hello'}/>)} />\n              <Route path=\"/userMenu\" render={(props) => (<UserMenu {...props} username={this.state.username} token={this.state.token} setSelected={this.setSelected}/>)} />\n              <Route path=\"/selectedSavedData\" render={(props) => (<DataSelected {...props} token={this.state.token} data_id={this.state.selectedSavedData} fData={this.state.selectedFData}/>)} />\n            </Switch>\n        </Router>\n      );\n    }\n  }\n}\n\nexport default withRouter(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}